<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1" metadata-complete="true">





<display-name>Archetype Created Web Application</display-name>

    <!-- 负责监听上下文Spring-bean的加载-->
    <listener>
        <!--地址-->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!--指定项目的核心配置加载使用的文件-->
    <!-- spring beans配置文件所在的目录-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--指定classpath  则处理的是web-inf下面的内容   如果不指定classpath则处理的是resources路径下面的内容-->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>


    <!--spring mvc 配置-->
    <!--配置servlet时同时有个与之相一对一的请求-servlet-mapping -->
    <!--配置spring mvc的时候首先要指定一个servlet-->
    <servlet>
        <!--这边的名字随意去，只要符合就行了，但之后要创建他的配置文件-->
        <servlet-name>spring</servlet-name>
        <!--哪个类去处理,处理项目里的所有的请求  -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <!--指定拦截请求的路径 '/'表示的是拦截所有的 这边只能匹配到比如说/login 但是匹配不到src/login-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--指定项目的编码-过虑器-->
    <!--encodingFilter-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>


        <!--强制编码-->
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>

        <!--映射标签-->
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <!--可以处理到所有的url-->
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--druid 有专门的接口和界面管理的-->

    <!--配置druid的基本的访问-->
    <servlet>
        <!--处理druid相关的请求-->
        <servlet-name>DruidStatServlet</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
<!--druid只有登录了才可以访问的-->
        <init-param>
            <param-name>loginUsername</param-name>
            <param-value>druid</param-value>
        </init-param>
        <init-param>
            <param-name>loginPassword</param-name>
            <param-value>druid</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <!--druid该如何请求-->
        <servlet-name>DruidStatServlet</servlet-name>
        <url-pattern>/sys/druid/*</url-pattern>
    </servlet-mapping>
    <!--告知druid拦截那些请求-->
    <filter>
        <filter-name>DruidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <!-- 指定初始化的参数-->
        <init-param>
            <!-- 过滤我们不需要的请求 -->
            <param-name>exclusions</param-name>
            <param-value>*.js,*.css,*.jpg,*.png,*.gif,sys/druid/*</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>DruidWebStatFilter</filter-name>
        <!--拦截的请求   拦截所有的-->
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>loginFilter</filter-name>
        <filter-class>com.mmall.filter.LoginFilter</filter-class>
    </filter>
<!--    对url进行登录的校验-->
    <filter-mapping>
        <filter-name>loginFilter</filter-name>
        <url-pattern>/sys/*</url-pattern>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>aclControlFilter</filter-name>
        <filter-class>com.mmall.filter.AclControlFilter</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>exclusionUrls</param-name>
            <param-value>/sys/user/noAuth.page,/login.page</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>aclControlFilter</filter-name>
        <url-pattern>/sys/*</url-pattern>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>




    <!--项目启动首先访问的页面-->
    <welcome-file-list>
        <welcome-file>signin.jsp</welcome-file>
    </welcome-file-list>


</web-app>
